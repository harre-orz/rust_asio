//

#[cfg(target_os = "linux")]
mod specified {
    pub const IPV6_JOIN_GROUP: libc_::c_int = 20;
    pub const IPV6_LEAVE_GROUP: libc_::c_int = 21;
    pub use libc_::epoll_create1;
    pub use libc_::epoll_ctl;
    pub use libc_::epoll_event;
    pub use libc_::epoll_wait;
    pub use libc_::eventfd;
    pub use libc_::itimerspec;
    pub use libc_::timerfd_create;
    pub use libc_::timerfd_settime;
    pub use libc_::timespec;
    pub use libc_::CLOCK_MONOTONIC;
    pub use libc_::EFD_CLOEXEC;
    pub use libc_::EFD_NONBLOCK;
    pub use libc_::EPOLLERR;
    pub use libc_::EPOLLET;
    pub use libc_::EPOLLHUP;
    pub use libc_::EPOLLIN;
    pub use libc_::EPOLLOUT;
    pub use libc_::EPOLL_CLOEXEC;
    pub use libc_::EPOLL_CTL_ADD;
    pub use libc_::EPOLL_CTL_DEL;
    pub use libc_::TFD_CLOEXEC;
    pub use libc_::TFD_NONBLOCK;
    pub use libc_::TFD_TIMER_ABSTIME;
}
#[cfg(target_os = "macos")]
mod specified {
    pub use libc_::IPV6_JOIN_GROUP;
    pub use libc_::IPV6_LEAVE_GROUP;
}

pub use self::specified::*;
pub use libc_::__errno_location;
pub use libc_::accept;
pub use libc_::addrinfo;
pub use libc_::bind;
pub use libc_::c_char;
pub use libc_::c_int;
pub use libc_::c_void;
pub use libc_::close;
pub use libc_::connect;
pub use libc_::fcntl;
pub use libc_::freeaddrinfo;
pub use libc_::freeifaddrs;
pub use libc_::getaddrinfo;
pub use libc_::gethostname;
pub use libc_::getifaddrs;
pub use libc_::getpeername;
pub use libc_::getsockname;
pub use libc_::getsockopt;
pub use libc_::ifaddrs;
pub use libc_::ioctl;
pub use libc_::linger;
pub use libc_::listen;
pub use libc_::poll;
pub use libc_::pollfd;
pub use libc_::read;
pub use libc_::recv;
pub use libc_::recvfrom;
pub use libc_::send;
pub use libc_::sendto;
pub use libc_::setsockopt;
pub use libc_::shutdown;
pub use libc_::sockaddr;
pub use libc_::sockaddr_in;
pub use libc_::sockaddr_in6;
pub use libc_::sockaddr_ll;
pub use libc_::sockaddr_storage;
pub use libc_::sockaddr_un;
pub use libc_::socket;
pub use libc_::socketpair;
pub use libc_::socklen_t;
pub use libc_::strerror_r;
pub use libc_::write;
pub use libc_::AF_INET;
pub use libc_::AF_INET6;
pub use libc_::AF_LOCAL;
pub use libc_::AF_PACKET;
pub use libc_::AF_UNSPEC;
pub use libc_::AI_PASSIVE;
pub use libc_::EACCES;
pub use libc_::EADDRINUSE;
pub use libc_::EAFNOSUPPORT;
pub use libc_::EAGAIN;
pub use libc_::EALREADY;
pub use libc_::EBADF;
pub use libc_::ECANCELED;
pub use libc_::ECONNABORTED;
pub use libc_::ECONNREFUSED;
pub use libc_::ECONNRESET;
pub use libc_::EFAULT;
pub use libc_::EHOSTUNREACH;
pub use libc_::EINPROGRESS;
pub use libc_::EINTR;
pub use libc_::EINVAL;
pub use libc_::EISCONN;
pub use libc_::EMFILE;
pub use libc_::EMSGSIZE;
pub use libc_::ENAMETOOLONG;
pub use libc_::ENETDOWN;
pub use libc_::ENETRESET;
pub use libc_::ENETUNREACH;
pub use libc_::ENOBUFS;
pub use libc_::ENODEV;
pub use libc_::ENOMEM;
pub use libc_::ENOPROTOOPT;
pub use libc_::ENOTCONN;
pub use libc_::ENOTSOCK;
pub use libc_::EOPNOTSUPP;
pub use libc_::EPERM;
pub use libc_::EPIPE;
pub use libc_::ESHUTDOWN;
pub use libc_::ETIMEDOUT;
pub use libc_::EWOULDBLOCK;
pub use libc_::FD_CLOEXEC;
pub use libc_::FIONBIO;
pub use libc_::FIONREAD;
pub use libc_::F_GETFD;
pub use libc_::F_GETFL;
pub use libc_::F_SETFD;
pub use libc_::IFNAMSIZ;
pub use libc_::IPPROTO_ICMP;
pub use libc_::IPPROTO_ICMPV6;
pub use libc_::IPPROTO_IP;
pub use libc_::IPPROTO_IPV6;
pub use libc_::IPPROTO_TCP;
pub use libc_::IPPROTO_UDP;
pub use libc_::IPV6_MULTICAST_HOPS;
pub use libc_::IPV6_MULTICAST_IF;
pub use libc_::IPV6_MULTICAST_LOOP;
pub use libc_::IPV6_UNICAST_HOPS;
pub use libc_::IPV6_V6ONLY;
pub use libc_::IP_ADD_MEMBERSHIP;
pub use libc_::IP_DROP_MEMBERSHIP;
pub use libc_::IP_MULTICAST_IF;
pub use libc_::IP_MULTICAST_LOOP;
pub use libc_::IP_MULTICAST_TTL;
pub use libc_::IP_TTL;
pub use libc_::O_NONBLOCK;
pub use libc_::POLLERR;
pub use libc_::POLLHUP;
pub use libc_::POLLIN;
pub use libc_::POLLOUT;
pub use libc_::SHUT_RD;
pub use libc_::SHUT_RDWR;
pub use libc_::SHUT_WR;
pub use libc_::SOCK_DGRAM;
pub use libc_::SOCK_RAW;
pub use libc_::SOCK_SEQPACKET;
pub use libc_::SOCK_STREAM;
pub use libc_::SOL_SOCKET;
pub use libc_::SO_BROADCAST;
pub use libc_::SO_DEBUG;
pub use libc_::SO_DONTROUTE;
pub use libc_::SO_ERROR;
pub use libc_::SO_KEEPALIVE;
pub use libc_::SO_LINGER;
pub use libc_::SO_RCVBUF;
pub use libc_::SO_RCVLOWAT;
pub use libc_::SO_REUSEADDR;
pub use libc_::SO_SNDBUF;
pub use libc_::SO_SNDLOWAT;
pub use libc_::TCP_NODELAY;
